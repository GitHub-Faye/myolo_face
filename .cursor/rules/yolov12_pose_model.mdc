---
description: 
globs: 
alwaysApply: true
---
# YOLOv12姿态模型创建流程

## 概述
YOLOv12姿态（Pose）任务模型是基于YOLOv12检测模型架构，专门用于人体或动物关键点检测的模型。本文档描述了YOLOv12姿态模型的创建过程、使用的组件及其位置。

## 组件位置

### 核心模型定义类
- [PoseModel](mdc:ultralytics/nn/tasks.py) - YOLOv12姿态模型的核心类，位于`ultralytics/nn/tasks.py`
- [Pose头部](mdc:ultralytics/nn/modules/head.py) - 位于`ultralytics/nn/modules/head.py`的`Pose`类

### 训练和评估组件
- [PoseTrainer](mdc:ultralytics/models/yolo/pose/train.py) - 姿态模型训练器，位于`ultralytics/models/yolo/pose/train.py`
- [PoseValidator](mdc:ultralytics/models/yolo/pose/val.py) - 姿态模型验证器，位于`ultralytics/models/yolo/pose/val.py`
- [PosePredictor](mdc:ultralytics/models/yolo/pose/predict.py) - 姿态模型预测器，位于`ultralytics/models/yolo/pose/predict.py`

### 配置文件
- YOLOv12配置 - 位于`ultralytics/cfg/models/v12/yolov12.yaml`
- 参考YOLOv8姿态配置 - 位于`ultralytics/cfg/models/v8/yolov8-pose.yaml`
- 参考YOLO11姿态配置 - 位于`ultralytics/cfg/models/11/yolo11-pose.yaml`

### 数据集配置
- COCO姿态数据集 - 位于`ultralytics/cfg/datasets/coco-pose.yaml`
- COCO8姿态数据集（小型测试版） - 位于`ultralytics/cfg/datasets/coco8-pose.yaml`

## 模型创建过程

### 1. 姿态模型初始化
YOLOv12姿态模型通过`PoseModel`类创建，该过程包括：
1. 加载YOLOv12配置文件
2. 设置关键点形状参数（kpt_shape）
3. 初始化基础检测模型
4. 添加姿态特定组件

### 2. 模型构建关键点
- 使用`yolov12.yaml`作为基础架构
- 将`Detect`头部替换为`Pose`头部
- 添加关键点预测层（通常是17个关键点，每个有3个值，表示x、y和可见性）

### 3. 训练流程
1. 使用`PoseTrainer`初始化训练
2. 加载姿态数据集（如COCO-Pose）
3. 设置姿态特定损失函数（v8PoseLoss）
4. 训练模型并计算姿态评估指标

### 4. 验证与评估
使用`PoseValidator`进行模型评估，计算：
- 边界框精度（mAP_box）
- 关键点精度（mAP_pose）
- 对象关键点相似性（OKS）评分

### 5. 预测推理
通过`PosePredictor`执行推理，输出包含：
- 检测边界框
- 关键点坐标
- 关键点可见性分数

## 关键技术特点
- 多尺度特征融合（P3-P5输出）
- 特殊的关键点损失函数
- 使用A2C2f（注意力增强卷积块）提高精度
- 可应用于人体姿态、动物姿态等不同关键点任务
